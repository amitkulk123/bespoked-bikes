{"ast":null,"code":"var _jsxFileName = \"/Users/amitkulkarni/Documents/github/bespoked-bikes/src/SalesPerson.js\";\nimport { useState, useEffect } from 'react';\nimport { collection, getDocs, addDoc, updateDoc, deleteDoc, doc } from 'firebase/firestore';\nimport { db } from './firebase-config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SalesPerson = () => {\n  // const [newFirstName, setNewFirstName] = useState(\"\");\n  // const [newLastName, setNewLastName] = useState(\"\");\n  // const [newAddress, setNewAddress] = useState(\"\");\n  // const [newPhone, setNewPhone] = useState(\"\");\n  // const [newStartDate, setNewStartDate] = useState(\"\");\n  // const [newTermDate, setNewTermDate] = useState(\"\");\n  // const [newManager, setNewManager] = useState(\"\");\n  // const [users, setUsers] = useState([]);\n  // const usersCollectionRef = collection(db, \"users\")\n  // const createSalesPerson = async() => { \n  //     if (newFirstName == \"\" || newLastName == \"\" || newAddress == \"\" || newPhone == \"\" || newStartDate == \"\" || newTermDate == \"\" || newManager == \"\") {\n  //     alert(\"One of your inputs is/are null. Please fill out all inputs\");\n  //     } \n  //     else {\n  //     // This will add a new user \n  //     await addDoc(usersCollectionRef, { \n  //         firstName: newFirstName, \n  //         lastName: newLastName,\n  //         address: newAddress,\n  //         phone: newPhone,\n  //         startDate: newStartDate,\n  //         termDate: newTermDate,\n  //         manager: newManager      \n  //     });\n  //     }\n  // }\n  // const updateUser = async(id, age) => {\n  //   const userDoc = doc(db, \"users\", id)\n  //   const newFields = { age: age + 1 }\n  //   await updateDoc(userDoc, newFields);\n  // };\n  // const deleteUser = async (id) => {\n  //     const userDoc = doc(db, \"users\", id);\n  //     await deleteDoc(userDoc);\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SalesPerson\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"First Name\" // onChange={(event) => {\n      // setNewFirstName(event.target.value);\n      // }}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Last Name\" // onChange={(event) => {\n      // setNewLastName(event.target.value);\n      // }}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Address\" // onChange={(event) => {\n      // setNewAddress(event.target.value);\n      // }}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"tel\",\n      id: \"phone\",\n      name: \"phone\",\n      pattern: \"[0-9]{3}-[0-9]{3}-[0-9]{4}\",\n      placeholder: \"Phone ###-###-####\" // onChange={(event) => {\n      // setNewPhone(event.target.value);\n      // }}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      placeholder: \"Start Date\" // onChange={(event) => {\n      // setNewStartDate(event.target.value);\n      // }}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      placeholder: \"Termination Date\" // onChange={(event) => {\n      // setNewTermDate(event.target.value);\n      // }}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Manager\" // onChange={(event) => {\n      // setNewManager(event.target.value);\n      // }}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SalesPerson;\nexport default SalesPerson;\n\nvar _c;\n\n$RefreshReg$(_c, \"SalesPerson\");","map":{"version":3,"sources":["/Users/amitkulkarni/Documents/github/bespoked-bikes/src/SalesPerson.js"],"names":["useState","useEffect","collection","getDocs","addDoc","updateDoc","deleteDoc","doc","db","SalesPerson"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,MAA9B,EAAsCC,SAAtC,EAAiDC,SAAjD,EAA4DC,GAA5D,QAAuE,oBAAvE;AACA,SAASC,EAAT,QAAmB,mBAAnB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACI;AACI,MAAA,WAAW,EAAC,YADhB,CAEI;AACA;AACA;;AAJJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AACI,MAAA,WAAW,EAAC,WADhB,CAEI;AACA;AACA;;AAJJ;AAAA;AAAA;AAAA;AAAA,YARJ,eAcI;AACI,MAAA,WAAW,EAAC,SADhB,CAEI;AACA;AACA;;AAJJ;AAAA;AAAA;AAAA;AAAA,YAdJ,eAoBI;AACI,MAAA,IAAI,EAAC,KADT;AACe,MAAA,EAAE,EAAC,OADlB;AAC0B,MAAA,IAAI,EAAC,OAD/B;AACuC,MAAA,OAAO,EAAC,4BAD/C;AAEI,MAAA,WAAW,EAAC,oBAFhB,CAGI;AACA;AACA;;AALJ;AAAA;AAAA;AAAA;AAAA,YApBJ,eA2BI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,YAFhB,CAGI;AACA;AACA;;AALJ;AAAA;AAAA;AAAA;AAAA,YA3BJ,eAkCI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,kBAFhB,CAGI;AACA;AACA;;AALJ;AAAA;AAAA;AAAA;AAAA,YAlCJ,eAyCI;AACI,MAAA,WAAW,EAAC,SADhB,CAEI;AACA;AACA;;AAJJ;AAAA;AAAA;AAAA;AAAA,YAzCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkDH,CA7FD;;KAAMA,W;AA+FN,eAAeA,WAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { collection, getDocs, addDoc, updateDoc, deleteDoc, doc } from 'firebase/firestore';\nimport { db } from './firebase-config';\n\nconst SalesPerson = () => {\n\n    // const [newFirstName, setNewFirstName] = useState(\"\");\n    // const [newLastName, setNewLastName] = useState(\"\");\n    // const [newAddress, setNewAddress] = useState(\"\");\n    // const [newPhone, setNewPhone] = useState(\"\");\n    // const [newStartDate, setNewStartDate] = useState(\"\");\n    // const [newTermDate, setNewTermDate] = useState(\"\");\n    // const [newManager, setNewManager] = useState(\"\");\n    // const [users, setUsers] = useState([]);\n    // const usersCollectionRef = collection(db, \"users\")\n\n\n    // const createSalesPerson = async() => { \n    //     if (newFirstName == \"\" || newLastName == \"\" || newAddress == \"\" || newPhone == \"\" || newStartDate == \"\" || newTermDate == \"\" || newManager == \"\") {\n    //     alert(\"One of your inputs is/are null. Please fill out all inputs\");\n    //     } \n    //     else {\n    //     // This will add a new user \n    //     await addDoc(usersCollectionRef, { \n    //         firstName: newFirstName, \n    //         lastName: newLastName,\n    //         address: newAddress,\n    //         phone: newPhone,\n    //         startDate: newStartDate,\n    //         termDate: newTermDate,\n    //         manager: newManager      \n    //     });\n    //     }\n    // }\n\n    // const updateUser = async(id, age) => {\n    //   const userDoc = doc(db, \"users\", id)\n    //   const newFields = { age: age + 1 }\n    //   await updateDoc(userDoc, newFields);\n    // };\n\n    // const deleteUser = async (id) => {\n    //     const userDoc = doc(db, \"users\", id);\n    //     await deleteDoc(userDoc);\n    // }\n\n\n    return (\n        <div className=\"SalesPerson\">\n            <input \n                placeholder=\"First Name\" \n                // onChange={(event) => {\n                // setNewFirstName(event.target.value);\n                // }}\n\n            />\n            <input\n                placeholder=\"Last Name\"\n                // onChange={(event) => {\n                // setNewLastName(event.target.value);\n                // }}\n            />\n            <input\n                placeholder=\"Address\"\n                // onChange={(event) => {\n                // setNewAddress(event.target.value);\n                // }}\n            />\n            <input\n                type=\"tel\" id=\"phone\" name=\"phone\" pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n                placeholder=\"Phone ###-###-####\"\n                // onChange={(event) => {\n                // setNewPhone(event.target.value);\n                // }}\n            />\n            <input\n                type=\"date\"\n                placeholder=\"Start Date\"\n                // onChange={(event) => {\n                // setNewStartDate(event.target.value);\n                // }}\n            />\n            <input\n                type=\"date\"\n                placeholder=\"Termination Date\"\n                // onChange={(event) => {\n                // setNewTermDate(event.target.value);\n                // }}\n            />\n            <input\n                placeholder=\"Manager\"\n                // onChange={(event) => {\n                // setNewManager(event.target.value);\n                // }}\n            />\n        </div>\n    );\n};\n\nexport default SalesPerson;"]},"metadata":{},"sourceType":"module"}