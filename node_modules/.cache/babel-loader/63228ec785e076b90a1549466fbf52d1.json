{"ast":null,"code":"var _jsxFileName = \"/Users/amitkulkarni/Documents/github/bespoked-bikes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport { db } from './firebase-config';\nimport { collection, getDocs, addDoc, updateDoc, deleteDoc, doc, FieldValue } from 'firebase/firestore';\nimport SalesPerson from './SalesPerson';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // salesperson\n  const [newFirstName, setNewFirstName] = useState(\"\");\n  const [newLastName, setNewLastName] = useState(\"\");\n  const [newAddress, setNewAddress] = useState(\"\");\n  const [newPhone, setNewPhone] = useState(\"\");\n  const [newStartDate, setNewStartDate] = useState(\"\");\n  const [newTermDate, setNewTermDate] = useState(\"\");\n  const [newManager, setNewManager] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const usersCollectionRef = collection(db, \"users\"); // products\n\n  const [newName, setNewName] = useState(\"\");\n  const [newManufacturer, setNewManufacturer] = useState(\"\");\n  const [newStyle, setNewStyle] = useState(\"\");\n  const [newPurchasePrice, setNewPurchasePrice] = useState(0);\n  const [newSalePrice, setNewSalesPrice] = useState(0);\n  const [newQuantity, setNewQuantity] = useState(0);\n  const [newCommission, setNewCommission] = useState(\"\");\n  const [products, setProduct] = useState([]);\n  const productCollectionRef = collection(db, \"product\");\n\n  const createSalesPerson = async () => {\n    if (newFirstName == \"\" || newLastName == \"\" || newAddress == \"\" || newPhone == \"\" || newStartDate == \"\" || newTermDate == \"\" || newManager == \"\") {\n      alert(\"Your inputs is/are null. Please fill out all inputs\");\n    } else {\n      // This will add a new user \n      await addDoc(usersCollectionRef, {\n        firstName: newFirstName,\n        lastName: newLastName,\n        address: newAddress,\n        phone: newPhone,\n        startDate: newStartDate,\n        termDate: newTermDate,\n        manager: newManager\n      });\n    }\n  };\n\n  const createProduct = async () => {\n    if (newName == \"\" || newManufacturer == \"\" || newStyle == \"\" || newPurchasePrice == \"\" || newSalePrice == \"\" || newQuantity == \"\" || newCommission == \"\") {\n      alert(\"Your inputs is/are null. Please fill out all inputs\");\n    } else {\n      // This will add a new user \n      await addDoc(productCollectionRef, {\n        name: newName,\n        manufacturer: newManufacturer,\n        style: newStyle,\n        purchasePrice: Number(newPurchasePrice),\n        salePrice: Number(newSalePrice),\n        quantity: Number(newQuantity),\n        commission: newCommission\n      });\n    }\n  };\n\n  const editSalesPerson = async (id, newFirstName, newLastName, newAddress, newPhone, newStartDate, newTermDate, newManager) => {\n    const userDoc = doc(db, \"users\", id);\n    /**\n     *  TODO: Find a way to get current value of field from firestore\n     *  You also need this to check if the user/product is already added\n     */\n    // const userSnap = await getDocs(userDoc);\n    // if (userSnap.exists()) {\n    //   console.log(\"Document data:\", userSnap.data());\n    // } else {\n    //   // doc.data() will be undefined in this case\n    //   console.log(\"No such document!\");\n    // }\n\n    const newFields = {\n      firstName: newFirstName,\n      lastName: newLastName,\n      address: newAddress,\n      phone: newPhone,\n      startDate: newStartDate,\n      termDate: newTermDate,\n      manager: newManager\n    };\n    await updateDoc(userDoc, newFields);\n  };\n\n  const editProduct = async (id, newName, newManufacturer, newStyle, newPurchasePrice, newSalePrice, newQuantity, newCommission) => {\n    const productDoc = doc(db, \"product\", id);\n    const newFields = {\n      name: newName,\n      manufacturer: newManufacturer,\n      style: newStyle,\n      purchasePrice: Number(newPurchasePrice),\n      salePrice: Number(newSalePrice),\n      quantity: Number(newQuantity),\n      commission: newCommission\n    };\n    await updateDoc(productDoc, newFields);\n  };\n\n  const deleteUser = async id => {\n    const userDoc = doc(db, \"users\", id);\n    await deleteDoc(userDoc);\n  };\n\n  const deleteProduct = async id => {\n    const productDoc = doc(db, \"product\", id);\n    await deleteDoc(productDoc);\n  }; // This adds information to print from the document\n\n\n  useEffect(() => {\n    console.log(db);\n\n    const getUsers = async () => {\n      const data = await getDocs(usersCollectionRef);\n      setUsers(data.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      })));\n    };\n\n    const getProducts = async () => {\n      const data = await getDocs(productCollectionRef);\n      setProduct(data.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      })));\n    };\n\n    getUsers();\n    getProducts();\n  }, []); // const onAddBtnClick = event => {\n  //   editSalesPerson(<SalesPerson></SalesPerson>);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bespoked Bikes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: \"SalesPerson\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"First Name\",\n        onChange: event => {\n          setNewFirstName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Last Name\",\n        onChange: event => {\n          setNewLastName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Address\",\n        onChange: event => {\n          setNewAddress(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        id: \"phone\",\n        name: \"phone\",\n        pattern: \"[0-9]{3}-[0-9]{3}-[0-9]{4}\",\n        placeholder: \"###-###-####\",\n        onChange: event => {\n          setNewPhone(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        placeholder: \"Start Date\",\n        onChange: event => {\n          setNewStartDate(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        placeholder: \"Termination Date\",\n        onChange: event => {\n          setNewTermDate(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Manager\",\n        onChange: event => {\n          setNewManager(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createSalesPerson,\n        children: \"Create SalesPerson\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), users.map(user => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Name: \", user.firstName, \" \", user.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Address: \", user.address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Phone: \", user.phone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Start Date: \", user.startDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Termination Date: \", user.termDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Manager: \", user.manager]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              editSalesPerson(user.id, newFirstName, newLastName, newPhone, newAddress, newStartDate, newTermDate, newManager);\n            },\n            children: \"Edit User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              deleteUser(user.id);\n            },\n            children: \"Delete User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: \"Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Name\",\n        onChange: event => {\n          setNewName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Manufacturer\",\n        onChange: event => {\n          setNewManufacturer(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Style\",\n        onChange: event => {\n          setNewStyle(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Purchase Price\",\n        onChange: event => {\n          setNewPurchasePrice(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Sales Price\",\n        onChange: event => {\n          setNewSalesPrice(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Quantity on Hand\",\n        onChange: event => {\n          setNewQuantity(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Commission Percentage\",\n        onChange: event => {\n          setNewCommission(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createProduct,\n        children: \"Create Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), products.map(product => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Name: \", product.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Manufacturer: \", product.manufacturer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Style: \", product.style]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Purchase Price: \", product.purchasePrice]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Sale Price: \", product.salePrice]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Qty on Hand: \", product.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Commission Percentage: \", product.commission, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              editProduct(product.id, newName, newManufacturer, newStyle, newPurchasePrice, newSalePrice, newQuantity, newCommission);\n            },\n            children: \"Edit User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              deleteProduct(product.id);\n            },\n            children: \"Delete User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: \"Customers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Name...\" // onChange={(event) => {\n        //   setNewName(event.target.value);\n        // }}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: \"Sales\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Name...\" // onChange={(event) => {\n        //   setNewName(event.target.value);\n        // }}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Yj/OXq6S8gb8P0n2Xz18vc17vlQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/amitkulkarni/Documents/github/bespoked-bikes/src/App.js"],"names":["useState","useEffect","logo","db","collection","getDocs","addDoc","updateDoc","deleteDoc","doc","FieldValue","SalesPerson","App","newFirstName","setNewFirstName","newLastName","setNewLastName","newAddress","setNewAddress","newPhone","setNewPhone","newStartDate","setNewStartDate","newTermDate","setNewTermDate","newManager","setNewManager","users","setUsers","usersCollectionRef","newName","setNewName","newManufacturer","setNewManufacturer","newStyle","setNewStyle","newPurchasePrice","setNewPurchasePrice","newSalePrice","setNewSalesPrice","newQuantity","setNewQuantity","newCommission","setNewCommission","products","setProduct","productCollectionRef","createSalesPerson","alert","firstName","lastName","address","phone","startDate","termDate","manager","createProduct","name","manufacturer","style","purchasePrice","Number","salePrice","quantity","commission","editSalesPerson","id","userDoc","newFields","editProduct","productDoc","deleteUser","deleteProduct","console","log","getUsers","data","docs","map","getProducts","event","target","value","user","product"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport { db } from './firebase-config';\nimport { collection, getDocs, addDoc, updateDoc, deleteDoc, doc, FieldValue } from 'firebase/firestore';\nimport SalesPerson from './SalesPerson';\n\nfunction App() {\n// salesperson\n  const [newFirstName, setNewFirstName] = useState(\"\");\n  const [newLastName, setNewLastName] = useState(\"\");\n  const [newAddress, setNewAddress] = useState(\"\");\n  const [newPhone, setNewPhone] = useState(\"\");\n  const [newStartDate, setNewStartDate] = useState(\"\");\n  const [newTermDate, setNewTermDate] = useState(\"\");\n  const [newManager, setNewManager] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const usersCollectionRef = collection(db, \"users\");\n  \n\n// products\n  const [newName, setNewName] = useState(\"\");\n  const [newManufacturer, setNewManufacturer] = useState(\"\");\n  const [newStyle, setNewStyle] = useState(\"\");\n  const [newPurchasePrice, setNewPurchasePrice] = useState(0);\n  const [newSalePrice, setNewSalesPrice] = useState(0);\n  const [newQuantity, setNewQuantity] = useState(0);\n  const [newCommission, setNewCommission] = useState(\"\");\n  const [products, setProduct] = useState([]);\n  const productCollectionRef = collection(db, \"product\");\n\n\n  const createSalesPerson = async() => { \n    if (newFirstName == \"\" || newLastName == \"\" || newAddress == \"\" || newPhone == \"\" || newStartDate == \"\" || newTermDate == \"\" || newManager == \"\") {\n      alert(\"Your inputs is/are null. Please fill out all inputs\");\n    } \n    else {\n      // This will add a new user \n      await addDoc(usersCollectionRef, { \n        firstName: newFirstName, \n        lastName: newLastName,\n        address: newAddress,\n        phone: newPhone,\n        startDate: newStartDate,\n        termDate: newTermDate,\n        manager: newManager   \n      });\n    }\n  }\n\n  const createProduct = async() => { \n    if (newName == \"\" || newManufacturer == \"\" || newStyle == \"\" || newPurchasePrice == \"\" || newSalePrice == \"\" || newQuantity == \"\" || newCommission == \"\") {\n      alert(\"Your inputs is/are null. Please fill out all inputs\");\n    } \n    else {\n      // This will add a new user \n      await addDoc(productCollectionRef, { \n        name: newName,\n        manufacturer: newManufacturer, \n        style: newStyle, \n        purchasePrice: Number(newPurchasePrice), \n        salePrice: Number(newSalePrice), \n        quantity: Number(newQuantity), \n        commission: newCommission \n      });\n    }\n  }\n\n\n  const editSalesPerson = async(id, newFirstName, newLastName, newAddress, newPhone, newStartDate, newTermDate, newManager) => {\n\n    const userDoc = doc(db, \"users\", id);\n    /**\n     *  TODO: Find a way to get current value of field from firestore\n     *  You also need this to check if the user/product is already added\n     */\n    // const userSnap = await getDocs(userDoc);\n    // if (userSnap.exists()) {\n    //   console.log(\"Document data:\", userSnap.data());\n    // } else {\n    //   // doc.data() will be undefined in this case\n    //   console.log(\"No such document!\");\n    // }\n\n    const newFields = { \n        firstName: newFirstName,\n        lastName: newLastName,\n        address: newAddress,\n        phone: newPhone,\n        startDate: newStartDate,\n        termDate: newTermDate,\n        manager: newManager\n    }\n    await updateDoc(userDoc, newFields);\n  }\n\n  const editProduct = async(id, newName, newManufacturer, newStyle, newPurchasePrice, newSalePrice, newQuantity, newCommission) => {\n\n    const productDoc = doc(db, \"product\", id);\n    const newFields = { \n      name: newName,\n      manufacturer: newManufacturer, \n      style: newStyle, \n      purchasePrice: Number(newPurchasePrice), \n      salePrice: Number(newSalePrice), \n      quantity: Number(newQuantity), \n      commission: newCommission \n    }\n    await updateDoc(productDoc, newFields);\n  }\n\n  const deleteUser = async (id) => {\n    const userDoc = doc(db, \"users\", id);\n    await deleteDoc(userDoc);\n  }\n\n  const deleteProduct = async (id) => {\n    const productDoc = doc(db, \"product\", id);\n    await deleteDoc(productDoc);\n  }\n\n  \n  // This adds information to print from the document\n  useEffect(() => {\n    console.log(db);\n    const getUsers = async () => {\n      const data = await getDocs(usersCollectionRef);\n      setUsers(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n    };\n    const getProducts = async () => {\n      const data = await getDocs(productCollectionRef);\n      setProduct(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n    };\n\n    getUsers()\n    getProducts()\n  }, [])\n\n  // const onAddBtnClick = event => {\n  //   editSalesPerson(<SalesPerson></SalesPerson>);\n  // };\n\n  return (\n    <div className=\"App\">\n      <h1>Bespoked Bikes</h1>\n      <h2>Dashboard</h2>\n\n      <fieldset>\n        <legend>SalesPerson</legend>\n        <input \n          placeholder=\"First Name\" \n          onChange={(event) => {\n            setNewFirstName(event.target.value);\n          }}\n      \n        />\n        <input\n          placeholder=\"Last Name\"\n          onChange={(event) => {\n            setNewLastName(event.target.value);\n          }}\n        />\n        <input\n          placeholder=\"Address\"\n          onChange={(event) => {\n            setNewAddress(event.target.value);\n          }}\n        />\n        <input\n          type=\"tel\" id=\"phone\" name=\"phone\" pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n          placeholder=\"###-###-####\"\n          onChange={(event) => {\n            setNewPhone(event.target.value);\n          }}\n        />\n        <input\n          type=\"date\"\n          placeholder=\"Start Date\"\n          onChange={(event) => {\n            setNewStartDate(event.target.value);\n          }}\n        />\n        <input\n          type=\"date\"\n          placeholder=\"Termination Date\"\n          onChange={(event) => {\n            setNewTermDate(event.target.value);\n          }}\n        />\n        <input\n          placeholder=\"Manager\"\n          onChange={(event) => {\n            setNewManager(event.target.value);\n          }}\n        />\n\n        <button onClick={createSalesPerson}>Create SalesPerson</button>\n\n        {users.map((user) => { \n          return (\n            <div>\n              {\" \"}\n              <h3>Name: {user.firstName} {user.lastName}</h3>\n              <h5>Address: {user.address}</h5>\n              <h5>Phone: {user.phone}</h5>\n              <h5>Start Date: {user.startDate}</h5>\n              <h5>Termination Date: {user.termDate}</h5>\n              <h5>Manager: {user.manager}</h5>\n\n              {/* <h1>Age: {user.age} </h1> */}\n              {/* <button onClick={() => { updateUser(user.id, user.age)}}>Increase age</button> */}\n              {/* <button onClick={() => { editSalesPerson(user.id) }}>Edit User</button> */}\n              {/* <button onClick=confirm>Edit User</button> */}\n              <button onClick={() => { editSalesPerson(user.id, newFirstName, newLastName, newPhone, newAddress, newStartDate, newTermDate, newManager) }}>Edit User</button>\n              <button onClick={() => { deleteUser(user.id) }}>Delete User</button>\n            </div>\n          )\n        })}\n      </fieldset>\n\n      <fieldset>\n        <legend>Products</legend>\n        <input \n          placeholder=\"Name\" \n          onChange={(event) => {\n            setNewName(event.target.value);\n          }}\n      \n        />\n        <input\n          placeholder=\"Manufacturer\"\n          onChange={(event) => {\n            setNewManufacturer(event.target.value);\n          }}\n        />\n        <input\n          placeholder=\"Style\"\n          onChange={(event) => {\n            setNewStyle(event.target.value);\n          }}\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Purchase Price\"\n          onChange={(event) => {\n            setNewPurchasePrice(event.target.value);\n          }}\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Sales Price\"\n          onChange={(event) => {\n            setNewSalesPrice(event.target.value);\n          }}\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Quantity on Hand\"\n          onChange={(event) => {\n            setNewQuantity(event.target.value);\n          }}\n        />\n        <input\n          placeholder=\"Commission Percentage\"\n          onChange={(event) => {\n            setNewCommission(event.target.value);\n          }}\n        />\n\n        <button onClick={createProduct}>Create Product</button>\n\n        { products.map((product) => { \n          return (\n            <div>\n              {\" \"}\n              <h3>Name: {product.name}</h3>\n              <h5>Manufacturer: {product.manufacturer}</h5>\n              <h5>Style: {product.style}</h5>\n              <h5>Purchase Price: {product.purchasePrice}</h5>\n              <h5>Sale Price: {product.salePrice}</h5>\n              <h5>Qty on Hand: {product.quantity}</h5>\n              <h5>Commission Percentage: {product.commission} </h5>\n              { <button onClick={() => { editProduct(product.id, newName, newManufacturer, newStyle, newPurchasePrice, newSalePrice, newQuantity, newCommission) }}>Edit User</button> }\n              <button onClick={() => { deleteProduct(product.id) }}>Delete User</button>\n              \n            </div>\n          )\n        })} \n        {/* <button onClick={createUser}>Create User</button> */}\n      </fieldset>\n\n      <fieldset>\n        <legend>Customers</legend>\n        <input \n          placeholder=\"Name...\" \n          // onChange={(event) => {\n          //   setNewName(event.target.value);\n          // }}\n      \n        />\n\n        {/* <button onClick={createUser}>Create User</button> */}\n      </fieldset>\n\n      <fieldset>\n        <legend>Sales</legend>\n        <input \n          placeholder=\"Name...\" \n          // onChange={(event) => {\n          //   setNewName(event.target.value);\n          // }}\n      \n        />\n\n        {/* <button onClick={createSalesPerson}>Create User</button> */}\n      </fieldset>\n      \n\n\n\n\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}